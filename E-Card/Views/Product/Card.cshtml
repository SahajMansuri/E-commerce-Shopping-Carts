@model List<E_Card.Models.Product>

@{
    ViewBag.Title = "Cart";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Shopping Cart</h2>

@if (Model.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantities</th>
                <th>Image</th>
                <th>Total Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>&#8377; @product.ProductPrice</td>
                    <td>
                        <div class="input-group">
                            <input type="number" class="quantity-input form-control" min="1" value="1" data-product-id="@product.ProductId" />
                        </div>
                    </td>
                    <td><img src="@Url.Action("Display", "Product", new { id = product.ProductId })" alt="@product.ProductName" width="100" /></td>
                    <td class="total-price">&#8377; @product.ProductPrice</td>
                    <td>
                        <a href="@Url.Action("DeleteFromCart", "Product", new { id = product.ProductId })" class="btn btn-danger btn-sm">Remove</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Display Total Sum -->
    <div class="total-sum" style="text-align:right">
        <h4>Total Order Amount: &#8377; <span id="totalSum">0.00</span></h4>

    </div>
}
else
{
    <p>Your cart is empty.</p>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Function to calculate the total price for a product based on its quantity
    function calculateTotalPrice(productId, quantity) {
        var productPrice = parseFloat($(".quantity-input[data-product-id='" + productId + "']").closest("tr").find("td:nth-child(2)").text().replace('₹', ''));
        return productPrice * quantity;
    }

    // Function to update the total price and show it
    function updateTotalPrice(productId, quantity) {
        var totalPrice = calculateTotalPrice(productId, quantity);
        $(".quantity-input[data-product-id='" + productId + "']").closest("tr").find(".total-price").text("₹ " + totalPrice.toFixed(2));

        // Recalculate and display the total sum of all products
        var totalSum = 0;
        $(".total-price").each(function () {
            var price = parseFloat($(this).text().replace('₹', '').trim());
            totalSum += price;
        });
        $("#totalSum").text(totalSum.toFixed(2));
    }

    // Event listener for quantity change
    $(".quantity-input").on("change", function () {
        var productId = $(this).data("product-id");
        var quantity = $(this).val();
        updateTotalPrice(productId, quantity);
    });

    // Initialize the total sum on page load
    $(document).ready(function () {
        updateTotalPrice();
    });
</script>
